---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  labels:
    app: {{ .Release.Name }}-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app:  {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - image: {{ .Values.container.image }}:{{ .Values.container.tag }}
          name:  {{ .Release.Name }}-app
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: db-secret-auth
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-secret-auth
                  key: SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret-auth
                  key: SPRING_DATASOURCE_PASSWORD
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              valueFrom:
                configMapKeyRef:
                  name: spring-config-auth
                  key: spring.jpa.hibernate.ddl-auto
            - name: SPRING_JPA_OPEN_IN_VIEW
              valueFrom:
                configMapKeyRef:
                  name: spring-config-auth
                  key: spring.jpa.open-in-view
            - name: MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: spring-config-auth
                  key: management.endpoint.health.probes.enabled
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              valueFrom:
                configMapKeyRef:
                  name: spring-config-auth
                  key: management.endpoints.web.exposure.include
            - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
              valueFrom:
                configMapKeyRef:
                  name: spring-config-auth
                  key: management.endpoint.health.show-details
            - name: MANAGEMENT_METRICS_DISTRIBUTION_SLO_HTTP_SERVER_REQUESTS
              valueFrom:
                configMapKeyRef:
                  name: spring-config-auth
                  key: management.metrics.distribution.slo.http.server.requests
            - name: MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: spring-config-auth
                  key: management.prometheus.metrics.export.enabled
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: spring-config-auth
                  key: server.port
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: spring-config-auth
                  key: jwt.secret
          resources:
            requests:
              memory: "500Mi"
              cpu: "500m"
            limits:
              memory: "700Mi"
              cpu: "700m"
          ports:
            - containerPort: 9099
              protocol: TCP
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 50
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 50
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-service
  labels:
    app: {{ .Release.Name }}-service
spec:
  ports:
    - name: metrics
      port: 80
      targetPort: 8080
  selector:
    app: {{ .Release.Name }}
  type: ClusterIP